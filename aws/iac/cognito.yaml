AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Cognito with Google Integration

Parameters:
  Env:
    Type: String
    Default: dev
  UserPoolDomainName:
    Type: String
    Description: Domain name for user pool
  UserPoolName:
    Type: String
    Description: User pool name
  GoogleClientId:
    Type: String
    Description: Google OAuth Client ID

Resources:

  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AccountRecoverySetting:
        RecoveryMechanisms:
        - Name: admin_only
          Priority: 1
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      AutoVerifiedAttributes:
      - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7
      UsernameAttributes:
      - email
      UsernameConfiguration:
        CaseSensitive: false
      UserPoolName: !Ref UserPoolName

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn:
    - UserPoolIdentityProviderGoogle
    Properties:
      UserPoolId: !Ref UserPool
      GenerateSecret: false
      RefreshTokenValidity: 365
      IdTokenValidity: 1
      TokenValidityUnits:
        IdToken: days
      ExplicitAuthFlows:
      - ALLOW_ADMIN_USER_PASSWORD_AUTH
      - ALLOW_REFRESH_TOKEN_AUTH
      SupportedIdentityProviders:
      - COGNITO
      - Google
      AllowedOAuthFlowsUserPoolClient: true
      AllowedOAuthFlows:
      - code
      AllowedOAuthScopes:
      - openid
      - profile
      - email
      CallbackURLs:
      - myapp://loggedIn
      LogoutURLs:
      - myapp://logout
    Metadata:
      SamResourceId: UserPoolClient

  UserPoolIdentityProviderGoogle:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: Google
      ProviderType: Google
      UserPoolId: !Ref UserPool
      AttributeMapping:
        email: email
        given_name: given_name
        family_name: family_name
        picture: picture
      ProviderDetails:
        client_id: !Ref GoogleClientId
        client_secret: !Sub '{{resolve:secretsmanager:arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:GoogleClientSecret:SecretString}}'
        authorize_scopes: openid email profile

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Ref UserPoolDomainName
      UserPoolId: !Ref UserPool

Outputs:
  UserPoolId:
    Description: User pool id
    Value: !Ref UserPool
  UserPoolClient:
    Description: User pool client
    Value: !Ref UserPoolClient
  UserPoolArn:
    Description: User pool arn
    Value: !GetAtt UserPool.Arn
